name: Update RLIs
on:
  pull_request:
  issue_comment:
    types: [ created ]

jobs:
  check:
    if: contains(github.event.comment.html_url, '/pull/') || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      # ---- Find Trigger States ----
      # Run Inspector autofix only on files changed by the PR
      - uses: khan/pull-request-comment-trigger@master
        id: trigger-diff
        with:
          trigger: '\inspector fix diff'
          prefix_only: true
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # Run Inspector autofix on everything
      - uses: khan/pull-request-comment-trigger@master
        id: trigger-all
        with:
          trigger: '\inspector fix all'
          prefix_only: true
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'


      # ---- Checkout - Triggered by Pull Request -----
      # If triggered by a pull request, simple checkout
      - name: Checkout [Pull Request]
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2

      # ---- Checkout - Triggered by Comment -----
      # If triggered by a comment, we need to find out which ref to checkout
      - name: Get Pull Request Ref
        if: github.event_name != 'pull_request'
        id: get_pr_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Checkout [Comment]
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ fromJson(steps.get_pr_ref.outputs.data).head.ref }}


      # ---- Common - Run ----
      # Remove unchanged files, unless explicitly triggered on everything
      - name: Remove unchanged files
        if: steps.trigger-all.outputs.triggered == 'false'
        run: |
          git ls-files -v | sort | uniq -u | grep "^h" | xargs rm -rf

      # Run Inspector
      - name: Inspect RLIs
        uses: Starlight220/InspectRLIs@main
        id: inspector
        with:
          root: ${{ github.workspace }}
          baseUrl: https://raw.githubusercontent.com/wpilibsuite/allwpilib/
          versionScheme: v\d{4}\.\d\.\d(?:-beta-\d)?|[0-9a-f]{40}
          latestVersion: 1f7c9adeeb148d044e6cccf1505f1512229241bd

      - name: Print outputs
        run: |
          echo "outputs: ${{ steps.inspector.outputs }}"

      - name: Test
        run: |
          echo "output\n: ${{ steps.inspector.outputs.report }}"

      # If autofix is triggered, commit changes
      - name: Commit
        if: steps.trigger-all.outputs.triggered == 'true' || steps.trigger-diff.outputs.triggered == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git restore --staged $(git ls-files --deleted)
          git add .
          git commit -m "Update RLIs"
          git push

      # ---- Common - Post Report ----
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Inspector Report
          direction: last

      - name: Create comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          body: |
            "${{ steps.inspector.outputs.report }}"
          issue-number: ${{ github.event.pull_request.number }}

      - name: Update comment
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          body: |
            "${{ steps.inspector.outputs.report }}"
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace

      # If there are any outdated or invalid RLIs, fail the status check
      - name: Set exit code
        if: ${{ steps.inspector.up-to-date != true }}
        run: exit 1
